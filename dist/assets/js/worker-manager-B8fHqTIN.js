class e{constructor(){this.worker=null,this.pendingTasks=new Map,this.taskId=0,this.isReady=!1,this.init()}async init(){try{this.worker=new Worker(new URL("/image-converter/assets/image-worker-BsPU02vj.js",import.meta.url),{type:"module"}),this.worker.onmessage=this.handleWorkerMessage.bind(this),this.worker.onerror=this.handleWorkerError.bind(this),await this.waitForReady()}catch(e){throw e}}waitForReady(){return new Promise((e,s)=>{const r=setTimeout(()=>{s(new Error("Timeout esperando worker"))},5e3),t=s=>{"ready"===s.data.type&&(this.isReady=!0,clearTimeout(r),this.worker.removeEventListener("message",t),e())};this.worker.addEventListener("message",t)})}handleWorkerMessage(e){const{type:s,data:r,id:t}=e.data;if("ready"===s)return void(this.isReady=!0);if(!t)return;const i=this.pendingTasks.get(t);if(i)switch(s){case"success":i.resolve(r),this.pendingTasks.delete(t);break;case"error":i.reject(new Error(r.message)),this.pendingTasks.delete(t);break;case"progress":i.onProgress&&i.onProgress(r)}}handleWorkerError(e){this.pendingTasks.forEach(s=>{s.reject(new Error("Worker error: "+e.message))}),this.pendingTasks.clear()}async executeTask(e,s,r=null){if(!this.isReady)throw new Error("Worker no estÃ¡ listo");const t=++this.taskId;return new Promise((i,a)=>{this.pendingTasks.set(t,{resolve:i,reject:a,onProgress:r}),this.worker.postMessage({type:e,data:s,id:t})})}async compressImage(e,s={}){return this.executeTask("compress",{file:e,options:s})}async resizeImage(e,s,r){return this.executeTask("resize",{imageData:e,width:s,height:r})}async createIcoFile(e,s){return this.executeTask("createIco",{canvas:e,sizes:s})}async batchCompress(e,s=[],r={}){return this.executeTask("batchCompress",{files:e,options:s,defaultOptions:r})}async processMultipleFiles(e,s,r=null){const t=e.map(()=>s);return this.executeTask("batchCompress",{files:e,options:t,defaultOptions:s},r)}terminate(){this.worker&&(this.worker.terminate(),this.worker=null),this.pendingTasks.clear(),this.isReady=!1}isWorkerAvailable(){return this.isReady&&null!==this.worker}static isSupported(){return"undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas}}export{e as default};
